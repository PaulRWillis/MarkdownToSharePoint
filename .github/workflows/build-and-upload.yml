name: Build PDF and Upload to SharePoint

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # - name: Get SharePoint Access Token
      #   id: get_token
      #   env:
      #     TENANT_ID: ${{ secrets.TENANT_ID }}
      #     CLIENT_ID: ${{ secrets.CLIENT_ID }}
      #     CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      #   run: |
      #     TOKEN_RESPONSE=$(curl -X POST \
      #       -H "Content-Type: application/x-www-form-urlencoded" \
      #       -d "grant_type=client_credentials&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&scope=https://tynesidetech.sharepoint.com/.default" \
      #       https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/token)
      #     echo "$TOKEN_RESPONSE" > token.json
      #     ACCESS_TOKEN=$(jq -r '.access_token' token.json)
      #     echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV
          
      - name: Get SharePoint Access Token
        id: get_token_debug
        env:
          TENANT_ID: ${{ secrets.TENANT_ID }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        run: |
          TOKEN_RESPONSE=$(curl -X POST \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&scope=https://tynesidetech.sharepoint.com/.default" \
            https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/token)
          echo "Token Response: $TOKEN_RESPONSE"
          ACCESS_TOKEN=$(echo "$TOKEN_RESPONSE" | jq -r '.access_token')
          if [ "$ACCESS_TOKEN" = "null" ] || [ -z "$ACCESS_TOKEN" ]; then
            echo "Failed to retrieve access token"
            exit 1
          fi
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV
     
      # - name: Verify Folder Exists in SharePoint
      #   env:
      #     SHAREPOINT_SITE: ${{ secrets.SHAREPOINT_SITE }}
      #     SHAREPOINT_DOC_LIB: ${{ secrets.SHAREPOINT_DOC_LIB }}
      #     SHAREPOINT_USERNAME: ${{ secrets.SHAREPOINT_USERNAME }}
      #     SHAREPOINT_PASSWORD: ${{ secrets.SHAREPOINT_PASSWORD }}
      #   run: |
      #     echo "Checking if folder $SHAREPOINT_DOC_LIB exists..."
      #     curl --fail --ntlm --user "$SHAREPOINT_USERNAME:$SHAREPOINT_PASSWORD" \
      #       "$SHAREPOINT_SITE/_api/web/GetFolderByServerRelativeUrl('$SHAREPOINT_DOC_LIB')"
      #     echo "Folder exists."

      - name: Set up Pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-xetex

      - name: Build PDF from Markdown
        run: |
          chmod +x .github/scripts/build-pdf.sh
          .github/scripts/build-pdf.sh

      - name: List Workspace Files
        run: ls -la

      - name: Upload PDF to SharePoint
        env:
          SHAREPOINT_SITE: ${{ secrets.SHAREPOINT_SITE }}  # e.g., "https://{companyName}.sharepoint.com/sites/{Section}"
          SHAREPOINT_DOC_LIB: ${{ secrets.SHAREPOINT_DOC_LIB }}  # e.g., "/Shared Documents"
        run: |
          curl --fail --request POST \
            --header "Authorization: Bearer $ACCESS_TOKEN" \
            --header "Accept: application/json;odata=verbose" \
            --header "Content-Type: application/json;odata=verbose" \
            --data-binary @output.pdf \
            "$SHAREPOINT_SITE/_api/web/GetFolderByServerRelativeUrl('$SHAREPOINT_DOC_LIB')/Files/add(url='output.pdf',overwrite=true)"
  
      # - name: Upload PDF to SharePoint
      #   env:
      #     SHAREPOINT_SITE: ${{ secrets.SHAREPOINT_SITE }}
      #     SHAREPOINT_DOC_LIB: ${{ secrets.SHAREPOINT_DOC_LIB }}
      #     SHAREPOINT_USERNAME: ${{ secrets.SHAREPOINT_USERNAME }}
      #     SHAREPOINT_PASSWORD: ${{ secrets.SHAREPOINT_PASSWORD }}
      #   run: |
      #     curl --fail --verbose --ntlm --user "$SHAREPOINT_USERNAME:$SHAREPOINT_PASSWORD" \
      #       -T output.pdf \
      #       "$SHAREPOINT_SITE/_api/web/GetFolderByServerRelativeUrl('$SHAREPOINT_DOC_LIB')/Files/add(url='output.pdf',overwrite=true)"
